{"version":3,"file":"static/js/415.540b6a71.chunk.js","mappings":"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","sources":["components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","components/MovieList/MovieList.styled.js","components/MovieList/MovieList.jsx","services/normalize.js","pages/Home.jsx","services/api.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Backdrop = styled.div`\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    opacity: 1;\n    background-color: #00000080;\n    transition: opacity 250ms, visibility 250ms;\n    z-index: 100;\n`;","import { ThreeCircles } from 'react-loader-spinner';\nimport { Backdrop } from './Loader.styled';\n\nexport const Loader = () => {\n    return (\n        <Backdrop>\n            <ThreeCircles\n                height=\"100\"\n                width=\"100\"\n                color=\"black\"\n                wrapperStyle={{\n                    position: 'absolute',\n                    top: '50%',\n                    left: '50%',\n                    transform: 'translate(-50%, -50%)',\n                }}\n                wrapperClass=\"\"\n                visible={true}\n                ariaLabel=\"three-circles-rotating\"\n                outerCircleColor=\"\"\n                innerCircleColor=\"\"\n                middleCircleColor=\"\"\n            />\n        </Backdrop>\n    );\n};","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const ImgWrapper = styled.div`\n    position: relative;\n    display: flex;\n    align-items: center;\n    overflow: hidden;\n    width: 100%;\n    height: 100%;\n    & img {\n        width: 100%;\n        height: 100%;\n        object-fit: cover;\n        transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n    }\n`;\n\nexport const MovieLink = styled(Link)`\n    display: block;\n    flex-grow: 1;\n`;\n\nexport const CardOverlay = styled.div`\n    position: absolute;\n    bottom: 0;\n    left: 0;\n    width: 100%;\n    height: 50%;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: space-between;\n    gap: 20px;\n    padding: 20px;\n    background-color: #000000e8;\n    transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1),\n        opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n    ${/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(\n        navigator.userAgent\n    )\n        ? 'transform: translateY(0); opacity: 1;'\n        : 'transform: translateY(100%); opacity: 0;'}\n`;\n\nexport const MovieTitle = styled.h2`\n    line-height: 1.5;\n    text-align: center;\n    color: ${props => props.theme.colors.white};\n    font-size: ${props => props.theme.fontSizes.medium};\n`;\n\nexport const Description = styled.p`\n    padding: 4px 10px;\n    background-color: ${props => props.theme.colors.white};\n    border-radius: 12px;\n    color: ${props => props.theme.colors.accent};\n    font-size: ${props => props.theme.fontSizes.small};\n    font-weight: 700;\n`;","import { Grid, GridItem } from 'components/App.styled';\nimport { useLocation } from 'react-router-dom';\nimport {\n    CardOverlay,\n    Description,\n    ImgWrapper,\n    MovieLink,\n    MovieTitle,\n} from './MovieList.styled';\nimport { normalizeMoviesData } from 'services/normalize';\n\nexport const MovieList = ({ movies }) => {\n    const location = useLocation();\n    const data = normalizeMoviesData(movies);\n    return (\n        <Grid>\n            {data.map(({ id, movie_title, poster }) => (\n                <GridItem key={id}>\n                    <MovieLink to={`/movies/${id}`} state={{ from: location }}>\n                        <ImgWrapper>\n                            <img src={poster} alt={movie_title} />\n                            <CardOverlay className=\"js-overlay\">\n                                <MovieTitle>{movie_title}</MovieTitle>\n                                <Description>Ð¡lick for details</Description>\n                            </CardOverlay>\n                        </ImgWrapper>\n                    </MovieLink>\n                </GridItem>\n            ))}\n        </Grid>\n    );\n};","import noPoster from '../images/no-poster.jpg';\n\nexport const normalizeMoviesData = data => {\n    const IMAGES_BASE_URL = 'https://image.tmdb.org/t/p/w500/';\n    return data.map(\n        ({ id, title, original_title, name, original_name, poster_path }) => {\n            const movie_title = name\n                ? name\n                : title\n                ? title\n                : original_name\n                ? original_name\n                : original_title;\n            const poster = poster_path\n                ? IMAGES_BASE_URL + poster_path\n                : noPoster;\n            return {\n                id,\n                movie_title,\n                poster,\n            };\n        }\n    );\n};","import { Container, HomeTitle } from 'components/App.styled';\nimport { Loader } from 'components/Loader/Loader';\nimport { MovieList } from 'components/MovieList/MovieList';\nimport { useEffect, useState } from 'react';\nimport { gethMovies } from 'services/api';\nimport { ToastContainer, toast } from 'react-toastify';\n\nconst Home = () => {\n    const [isLoading, setIsLoading] = useState(false);\n    const [movies, setMovies] = useState([]);\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n        setIsLoading(true);\n        gethMovies()\n            .then(data => {\n                setMovies(data.results);\n            })\n            .catch(err => {\n                setError(err.message);\n                toast(err.message);\n            })\n\n            .finally(() => {\n                setIsLoading(false);\n            });\n    }, []);\n\n    return (\n        <Container>\n            {isLoading && <Loader />}\n            <HomeTitle>Trending today</HomeTitle>\n            <MovieList movies={movies} />\n            {error && <ToastContainer />}\n        </Container>\n    );\n};\n\nexport default Home;","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '49f12b338a85dcd14c7e661f8eadc77e';\n\nexport const gethMovies = async () => {\n    const { data } = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n    return data;\n};\n\nexport const gethMoviesByName = async (q, page) => {\n    const { data } = await axios.get(\n        `search/movie?api_key=${API_KEY}&page=${page}&query=${q}`\n    );\n    return data;\n};\n\nexport const gethMovieDetails = async (movieId, details) => {\n    const { data } = await axios.get(\n        `movie/${movieId}${details}?api_key=${API_KEY}`\n    );\n    return data;\n};"],"names":["Backdrop","styled","_templateObject","_taggedTemplateLiteral","Loader","_jsx","children","ThreeCircles","height","width","color","wrapperStyle","position","top","left","transform","wrapperClass","visible","ariaLabel","outerCircleColor","innerCircleColor","middleCircleColor","ImgWrapper","MovieLink","Link","_templateObject2","CardOverlay","_templateObject3","test","navigator","userAgent","MovieTitle","_templateObject4","props","theme","colors","white","fontSizes","medium","Description","_templateObject5","accent","small","MovieList","_ref","movies","location","useLocation","data","map","id","title","original_title","name","original_name","poster_path","movie_title","poster","noPoster","normalizeMoviesData","Grid","_ref2","GridItem","to","concat","state","from","_jsxs","src","alt","className","_useState","useState","_useState2","_slicedToArray","isLoading","setIsLoading","_useState3","_useState4","setMovies","_useState5","_useState6","error","setError","useEffect","gethMovies","then","results","catch","err","message","toast","finally","Container","HomeTitle","ToastContainer","axios","API_KEY","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$axios$get","_context","prev","next","sent","abrupt","stop","apply","arguments","gethMoviesByName","_callee2","q","page","_yield$axios$get2","_context2","_x","_x2","gethMovieDetails","_ref3","_callee3","movieId","details","_yield$axios$get3","_context3","_x3","_x4"],"sourceRoot":""}