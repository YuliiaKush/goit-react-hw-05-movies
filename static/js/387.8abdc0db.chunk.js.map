{"version":3,"file":"static/js/387.8abdc0db.chunk.js","mappings":"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","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.jsx","components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","services/api.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const CastTitle = styled.h2`\n    color: ${({ theme }) => theme.colors.white};\n    margin-bottom: 20px;\n`;\n\nexport const CastGrid = styled.ul`\n    display: grid;\n    grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));\n    grid-gap: ${({ theme }) => theme.spacing.step * 5}px;\n`;\n\nexport const CastElement = styled.li`\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n    padding-bottom: 10px;\n    align-items: center;\n    color: ${({ theme }) => theme.colors.white};\n    background-color: ${({ theme }) => theme.colors.accent};\n    & p {\n        padding: 0 5px;\n        line-height: 1.3;\n        text-align: center;\n    }\n    & p:last-child {\n        margin-top: auto;\n    }\n`;\n\nexport const CastPhoto = styled.img`\n    width: 100%;\n    object-fit: cover;\n    object-position: top;\n    aspect-ratio: 3 / 4;\n`;","import { useParams } from 'react-router-dom';\nimport { CastElement, CastGrid, CastPhoto, CastTitle } from './Cast.styled';\nimport { useEffect, useState } from 'react';\nimport { gethMovieDetails } from 'services/api';\nimport { Loader } from 'components/Loader/Loader';\nimport noPoster from '../../images/no-poster.jpg';\nimport { ToastContainer, toast } from 'react-toastify';\n\nexport const Cast = () => {\n    const { movieId } = useParams();\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState([]);\n    const [cast, setCast] = useState([]);\n    const IMAGES_BASE_URL = 'https://image.tmdb.org/t/p/w500/';\n\n    useEffect(() => {\n        if (!movieId) return;\n        setIsLoading(true);\n        gethMovieDetails(movieId, '/credits')\n            .then(data => {\n                setCast(data.cast);\n            })\n            .catch(err => {\n                setError(err.message);\n                toast(err.message);\n            })\n            .finally(() => {\n                setIsLoading(false);\n            });\n    }, [movieId]);\n\n    return (\n        <>\n            {isLoading && <Loader />}\n            {cast.length > 0 && (\n                <>\n                    <CastTitle>Cast</CastTitle>\n                    <CastGrid>\n                        {cast?.map(\n                            ({ credit_id, profile_path, name, character }) => (\n                                <CastElement key={credit_id}>\n                                    <CastPhoto\n                                        src={\n                                            profile_path\n                                                ? IMAGES_BASE_URL + profile_path\n                                                : noPoster\n                                        }\n                                        alt=\"_\"\n                                    />\n                                    <p>\n                                        <b>{name}</b>\n                                    </p>\n                                    <p>{character}</p>\n                                </CastElement>\n                            )\n                        )}\n                    </CastGrid>\n                </>\n            )}\n            {cast.length < 1 && (\n                <CastTitle>Sorry, no cast information available.</CastTitle>\n            )}\n            {error && <ToastContainer />}\n        </>\n    );\n};","import styled from '@emotion/styled';\n\nexport const Backdrop = styled.div`\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    opacity: 1;\n    background-color: #00000080;\n    transition: opacity 250ms, visibility 250ms;\n    z-index: 100;\n`;","import { ThreeCircles } from 'react-loader-spinner';\nimport { Backdrop } from './Loader.styled';\n\nexport const Loader = () => {\n    return (\n        <Backdrop>\n            <ThreeCircles\n                height=\"100\"\n                width=\"100\"\n                color=\"black\"\n                wrapperStyle={{\n                    position: 'absolute',\n                    top: '50%',\n                    left: '50%',\n                    transform: 'translate(-50%, -50%)',\n                }}\n                wrapperClass=\"\"\n                visible={true}\n                ariaLabel=\"three-circles-rotating\"\n                outerCircleColor=\"\"\n                innerCircleColor=\"\"\n                middleCircleColor=\"\"\n            />\n        </Backdrop>\n    );\n};","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '49f12b338a85dcd14c7e661f8eadc77e';\n\nexport const gethMovies = async () => {\n    const { data } = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n    return data;\n};\n\nexport const gethMoviesByName = async (q, page) => {\n    const { data } = await axios.get(\n        `search/movie?api_key=${API_KEY}&page=${page}&query=${q}`\n    );\n    return data;\n};\n\nexport const gethMovieDetails = async (movieId, details) => {\n    const { data } = await axios.get(\n        `movie/${movieId}${details}?api_key=${API_KEY}`\n    );\n    return data;\n};"],"names":["CastTitle","styled","_templateObject","_taggedTemplateLiteral","_ref","theme","colors","white","CastGrid","_templateObject2","_ref2","spacing","step","CastElement","_templateObject3","_ref3","_ref4","accent","CastPhoto","_templateObject4","Cast","movieId","useParams","_useState","useState","_useState2","_slicedToArray","isLoading","setIsLoading","_useState3","_useState4","error","setError","_useState5","_useState6","cast","setCast","useEffect","gethMovieDetails","then","data","catch","err","message","toast","finally","_jsxs","_Fragment","children","_jsx","Loader","length","map","credit_id","profile_path","name","character","src","noPoster","alt","ToastContainer","Backdrop","ThreeCircles","height","width","color","wrapperStyle","position","top","left","transform","wrapperClass","visible","ariaLabel","outerCircleColor","innerCircleColor","middleCircleColor","axios","API_KEY","gethMovies","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$axios$get","_context","prev","next","concat","sent","abrupt","stop","apply","arguments","gethMoviesByName","_callee2","q","page","_yield$axios$get2","_context2","_x","_x2","_callee3","details","_yield$axios$get3","_context3","_x3","_x4"],"sourceRoot":""}